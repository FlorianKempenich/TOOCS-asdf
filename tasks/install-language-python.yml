- name: "Install language: 'python' - Install requirements"
  block:
    - name: "Install language: 'python' - Install requirements - UBUNTU"
      apt:
        name:
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - curl
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libffi-dev
          - liblzma-dev
        state: latest
        update_cache: yes
      become: yes
      when: ansible_os_family == "Debian"

    - name: "Install language: 'python' - Install requirements - OSX"
      homebrew:
        name:
          - openssl
          - readline
          - sqlite3
          - xz
          - zlib
          - pkg-config # Thx: https://github.com/pyenv/pyenv/issues/1184#issuecomment-433683530
        state: latest
        update_homebrew: yes
      become: no
      when: ansible_os_family == "Darwin"

- name: "Install language: 'python' - Set compilation flags - OSX Only"
  # This sets the compiler flags so that python is installed using the following dependencies from Homebrew:
  #  - zlib => `"-I$(brew --prefix zlib)/include"`
  #  - openssl => `-I$(brew --prefix openssl)/include` and `-L$(brew --prefix openssl)/lib`
  #  - readline => `-I$(brew --prefix readline)/include` and `-L$(brew --prefix readline)/lib"`
  # For more info, see: https://github.com/pyenv/pyenv/wiki/Common-build-problems
  block:
    - name: "Install language: 'python' - Set compilation flags - OSX Only - 1/2 - Build"
      shell: |
        . /etc/profile # Fix PATH

        CFLAGS="-I$(brew --prefix openssl)/include -I$(brew --prefix readline)/include"
        CPPFLAGS="-I$(brew --prefix zlib)/include"
        LDFLAGS="-L$(brew --prefix openssl)/lib -L$(brew --prefix readline)/lib"

        echo $CFLAGS
        echo $CPPFLAGS
        echo $LDFLAGS
      register: compilation_flags

    - name: "Install language: 'python' - Set compilation flags - OSX Only - 1/2 - Set"
      set_fact:
        python_compilation_env_var:
          CFLAGS: "{{ compilation_flags.stdout_lines[0] }}"
          CPPFLAGS: "{{ compilation_flags.stdout_lines[1] }}"
          LDFLAGS: "{{ compilation_flags.stdout_lines[2] }}"

  when: ansible_os_family == "Darwin"

- name: "Install language: 'python' - Add 'python' plugin"
  shell: ". /etc/profile && . {{ ansible_env.HOME }}/.asdf/asdf.sh && asdf plugin-add python"
  args:
    executable: /bin/bash
  register: add_plugin_cmd
  failed_when: add_plugin_cmd.rc != 0 and add_plugin_cmd.rc != 2
  changed_when: add_plugin_cmd.rc != 2

- name: "Install language: 'python' - Install all 'python' versions: {{ versions }}"
  shell: ". /etc/profile && . {{ ansible_env.HOME }}/.asdf/asdf.sh && asdf install python {{ version }}"
  args:
    executable: /bin/bash
  environment: "{{ python_compilation_env_var | default({}) }}"
  register: install_python_version_cmd
  changed_when: install_python_version_cmd.stdout is not search('already installed')
  loop: "{{ versions }}"
  loop_control:
    loop_var: version

- name: "Install language: 'python' - Set global 'python' versions: {{ versions }}"
  shell: ". /etc/profile && . {{ ansible_env.HOME }}/.asdf/asdf.sh && asdf global python {{ versions | join(' ') }}"
  args:
    executable: /bin/bash
